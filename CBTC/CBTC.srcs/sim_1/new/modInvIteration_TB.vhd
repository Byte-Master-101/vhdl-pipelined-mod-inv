----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 05/17/2021 12:34:53 AM
-- Design Name: 
-- Module Name: modInvIteration_TB - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use work.common.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity modInvIteration_TB is
--  Port ( );
end modInvIteration_TB;

architecture Behavioral of modInvIteration_TB is

component modInvIteration is
    Port ( in_t : in SIGN_MAGNITUDE;
           in_new_t : in SIGN_MAGNITUDE;
           in_r : in UNSIGNED (255 downto 0);
           in_new_r : in UNSIGNED (255 downto 0);
           
           out_t : out SIGN_MAGNITUDE;
           out_new_t : out SIGN_MAGNITUDE;
           out_r : out UNSIGNED (255 downto 0);
           out_new_r : out UNSIGNED (255 downto 0));
end component;

signal in_t, in_new_t, out_t, out_new_t : SIGN_MAGNITUDE;
signal in_r, in_new_r, out_r, out_new_r : UNSIGNED (255 downto 0); 

begin

UUT : modInvIteration port map(in_t=> in_t, in_new_t=> in_new_t, out_t=> out_t, out_new_t=> out_new_t,
                               in_r=> in_r, in_new_r=> in_new_r, out_r=> out_r, out_new_r=> out_new_r);

process is
   constant period: time := 20 ns;
begin
    report "Testing modInvIteration...";
    
    in_t.sign <= '0';
    in_t.magnitude <= to_unsigned(0, 256);
    in_new_t.sign <= '0';
    in_new_t.magnitude <= to_unsigned(0, 256);
    in_r <= to_unsigned(0, 256);
    in_new_r <= to_unsigned(0, 256);
    wait for period;
    assert (out_t.sign = '0' AND out_t.magnitude = 0 AND
            out_new_t.sign = '0' AND out_new_t.magnitude = 0 AND
            out_r = 0 AND out_new_r = 0) report "test failed for input combination 1" severity error;
            
    in_t.sign <= '1';
    in_t.magnitude <= "0000000000000000000000000000000000000000000011110010101001011111000110011110000111101111010001010010011000001001010000011010101000100111011001111101000100011001011000011101010001100000100101110110111100111010111110000010011100010001100010000101011100110101";
    in_new_t.sign <= '0';
    in_new_t.magnitude <= "0000000000000000000000000000000000000000000001100111001110110100111010100010111001111000110110101001011011111001110100000100001111110010110011100001100011010110001101110010010011001110100111110101111001000011010010100000001100001100001010000001001001010101";
    in_r <= "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101010100111101000101000011001010001011000";
    in_new_r <= "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010010001010100011001010010001011111011";
    wait for period;
    assert (out_t.sign = '0' AND out_t.magnitude = "0000000000000000000000000000000000000000000001100111001110110100111010100010111001111000110110101001011011111001110100000100001111110010110011100001100011010110001101110010010011001110100111110101111001000011010010100000001100001100001010000001001001010101" AND
    out_new_t.sign = '1' AND out_new_t.magnitude = "0000000000000000000000000000000000000000000101011001111000010100000001000001000001101000000111111011110100000011000100011110111000011010001101011110100111101111100110001111100100101111001101101100110101111110010000100010101000011101101100000110100110001010" AND
    out_r = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010010001010100011001010010001011111011" AND out_new_r = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000010110010100001111000111000101011101")
        report "test failed for input combination 2" severity error;
        
    in_t.sign <= '0';
    in_t.magnitude <= "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001100111111";
    in_new_t.sign <= '1';
    in_new_t.magnitude <= "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000010110100";
    in_r <= "0000000000000011000000000000101001000100110110110000110100110011110100111001101001110011101010011011010111010101100110000000010000000011011111111010111000011011000101010010000110011000110111111000100001110010001000011101000101000111011110000101111101101011";
    in_new_r <= "0000000000000001001101010001111111000111100000010010001010100001110100011111111110011110100000111011001110110111010100111101000000111100100001100010011010010011001010100111010011101101110110000101001010111010100100110111101110000101011011011000010101001101";
    wait for period;
    assert (out_t.sign = '1' AND out_t.magnitude = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000010110100" AND
    out_new_t.sign = '0' AND out_new_t.magnitude = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011010010100111" AND
    out_r = "0000000000000001001101010001111111000111100000010010001010100001110100011111111110011110100000111011001110110111010100111101000000111100100001100010011010010011001010100111010011101101110110000101001010111010100100110111101110000101011011011000010101001101" AND out_new_r = "0000000000000000100101011100101010110101110110001100011111110000001011111001101100110110101000100100111001100110111100000110001110001010011100110110000011110100110000000011011110111101001011101110001011111100111110101101101000111100100111010101010011010001")
        report "test failed for input combination 3" severity error;
    
    in_t.sign <= '0';
    in_t.magnitude <= "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    in_new_t.sign <= '0';
    in_new_t.magnitude <= "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    in_r <= "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111110000101111";
    in_new_r <= "1001000001110101101101001110111001001101010001111000100011001010101110110100100111110111111110000001110000100010000100010101000111111010001011110110100010010001010011010000101010101000001100110011100010001111101000010001111111110110001000011010100101110000";
    wait for period;
    assert (out_t.sign = '0' AND out_t.magnitude = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001" AND
    out_new_t.sign = '1' AND out_new_t.magnitude = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001" AND
    out_r = "1001000001110101101101001110111001001101010001111000100011001010101110110100100111110111111110000001110000100010000100010101000111111010001011110110100010010001010011010000101010101000001100110011100010001111101000010001111111110110001000011010100101110000" AND out_new_r = "0110111110001010010010110001000110110010101110000111011100110101010001001011011000001000000001111110001111011101111011101010111000000101110100001001011101101110101100101111010101010111110011001100011101110000010111101101111100001001110111100101001010111111")
        report "test failed for input combination 4" severity error;
        
    in_t.sign <= '1';
    in_t.magnitude <= "0100100000011100111001011111100110110001001010001011001011001110101100100001100001101111111011100011101000001111010110111001010100111110101010101001111111011100101011000010001111000010110010111111000001000001010100010001001001101000100110000101010110001001";
    in_new_t.sign <= '0';
    in_new_t.magnitude <= "1011011111100011000110100000011001001110110101110100110100110001010011011110011110010000000100011100010111110000101001000110101011000001010101010110000000100011010100111101110000111101001101000000111110111110101011101110110010010111011001111010011010100110";
    in_r <= "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    in_new_r <= "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    wait for period;
    assert (out_t.sign = '0' AND out_t.magnitude = "1011011111100011000110100000011001001110110101110100110100110001010011011110011110010000000100011100010111110000101001000110101011000001010101010110000000100011010100111101110000111101001101000000111110111110101011101110110010010111011001111010011010100110" AND
    out_new_t.sign = '1' AND out_new_t.magnitude = "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111110000101111" AND
    out_r = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001" AND out_new_r = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
        report "test failed for input combination 5" severity error;
    
    in_t.sign <= '0';
    in_t.magnitude <= "1011011111100011000110100000011001001110110101110100110100110001010011011110011110010000000100011100010111110000101001000110101011000001010101010110000000100011010100111101110000111101001101000000111110111110101011101110110010010111011001111010011010100110";
    in_new_t.sign <= '1';
    in_new_t.magnitude <= "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111110000101111";
    in_r <= "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    in_new_r <= "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    wait for period;
    assert (out_t.sign = '0' AND out_t.magnitude = "1011011111100011000110100000011001001110110101110100110100110001010011011110011110010000000100011100010111110000101001000110101011000001010101010110000000100011010100111101110000111101001101000000111110111110101011101110110010010111011001111010011010100110" AND
    out_new_t.sign = '1' AND out_new_t.magnitude = "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111110000101111" AND
    out_r = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001" AND out_new_r = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
        report "test failed for input combination 6" severity error;
        
    report "Done testing modInvIteration...";
    wait;
end process;
end Behavioral;
